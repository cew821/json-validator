// Generated by CoffeeScript 1.6.2
(function() {
  var rebuild_schema, require_extended, require_if_available;

  require_if_available = function() {
    return document.getElementById("require_if_available").checked;
  };

  require_extended = function() {
    return document.getElementById("require_extended").checked;
  };

  rebuild_schema = function() {
    return window.schema = {
      type: "array",
      minItems: 1,
      required: true,
      uniqueItems: true,
      items: {
        type: "object",
        properties: {
          title: {
            type: "string",
            required: true
          },
          description: {
            type: "string",
            required: true
          },
          keyword: {
            type: "string",
            required: true
          },
          modified: {
            type: "string",
            format: "date",
            required: true
          },
          publisher: {
            type: "string",
            required: true
          },
          person: {
            type: "string",
            required: true
          },
          mbox: {
            type: "string",
            required: true
          },
          identifier: {
            type: ["string", "integer"],
            required: true
          },
          accessLevel: {
            type: "string",
            required: true,
            "enum": ["Public", "Restricted", "Private"]
          },
          dataDictionary: {
            type: "string",
            format: "url",
            required: require_if_available()
          },
          accessURL: {
            type: "string",
            format: "url",
            required: require_if_available()
          },
          format: {
            type: ["string", "array"],
            required: require_if_available()
          },
          license: {
            type: "string",
            required: require_if_available()
          },
          webService: {
            type: "string",
            format: "url",
            required: require_if_available()
          },
          spatial: {
            required: require_if_available()
          },
          temporal: {
            required: require_if_available()
          },
          format: {
            type: ["string", "array"],
            required: require_extended()
          },
          issued: {
            type: "string",
            format: "date",
            required: require_extended()
          },
          accrualPeriodicity: {
            type: "string",
            "enum": ["hourly", "daily", "weekly", "yearly", "other"],
            required: require_extended()
          },
          language: {
            type: "string",
            required: require_extended()
          },
          granularity: {
            type: "string",
            required: require_extended()
          },
          dataQuality: {
            type: "string",
            required: require_extended()
          },
          theme: {
            type: "string",
            required: require_extended()
          },
          references: {
            type: "string",
            required: require_extended()
          },
          distribution: {
            type: ["string", "array", "object"],
            required: require_extended()
          },
          size: {
            type: ["string", "integer"],
            required: require_extended()
          },
          download: {
            type: "string",
            format: "url",
            required: require_extended()
          },
          Feed: {
            type: "string",
            format: "url",
            required: require_extended()
          }
        }
      }
    };
  };

  rebuild_schema();

  window.rebuild_schema = rebuild_schema;

}).call(this);
